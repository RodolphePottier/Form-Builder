version: '3.8'

services:

  frontend:
    restart: always
    build:
      context: .
      dockerfile: frontend/frontend.Dockerfile
    ports:
      - ${FRONTEND_PORT}:3000
    depends_on:
      - backend
    networks:
      - reskueNetwork
    env_file: .env

  backend:
    restart: always
    build:
      context: .
      dockerfile: backend/backend.Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - reskueNetwork
    env_file: .env

  postgres:
    image: postgres:13
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - reskueNetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:


networks:
  reskueNetwork:
    name: shared-db-network
